{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showChat = _useState6[0],\n      setShowChat = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showEmergency = _useState8[0],\n      setShowEmergency = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showForm = _useState10[0],\n      setShowForm = _useState10[1];\n\n  var joinRoom = function joinRoom() {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n      setShowForm(false);\n    }\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      children: [showEmergency ? _jsx(Button, {\n        class: \"emergencybtn\",\n        onPress: function onPress() {\n          setShowEmergency(false);\n          title = \"Emergancy\";\n        }\n      }) : showForm ? _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Join A Chat\"\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"John...\",\n          onChangeText: function onChangeText(event) {\n            setUsername(event.target.value);\n          }\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Room ID...\",\n          onChangeText: function onChangeText(event) {\n            setRoom(event.target.value);\n          }\n        }), _jsx(Button, {\n          class: \"joinroombtn\",\n          onPress: joinRoom,\n          title: \"Join A Room\"\n        })]\n      }) : null, showChat ? _jsx(Chat, {\n        socket: socket,\n        username: username,\n        room: room\n      }) : null]\n    })\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ramizregat/asac/401/test/phone-App/src/chatApp.js"],"names":["io","useState","Chat","socket","connect","App","username","setUsername","room","setRoom","showChat","setShowChat","showEmergency","setShowEmergency","showForm","setShowForm","joinRoom","emit","title","event","target","value"],"mappings":";AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP;;;;;;;;AAIA,IAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;AACb,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCR,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0CV,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOW,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAgCZ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIV,QAAQ,KAAK,EAAb,IAAmBE,IAAI,KAAK,EAAhC,EAAoC;AAClCL,MAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyBT,IAAzB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;;AAQA,SACE;AAAA,cACA,MAAC,IAAD;AAAA,iBACGH,aAAa,GACZ,KAAC,MAAD;AACA,QAAA,KAAK,EAAC,cADN;AAEA,QAAA,OAAO,EAAE,mBAAM;AACXC,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAK,UAAAA,KAAK,GAAC,WAAN;AACD;AALH,QADY,GASVJ,QAAQ,GACV,MAAC,IAAD;AAAA,mBACE,KAAC,IAAD;AAAA;AAAA,UADF,EAEE,KAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,SAFd;AAGE,UAAA,YAAY,EAAE,sBAACK,KAAD,EAAW;AACvBZ,YAAAA,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH,UAFF,EASE,KAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,YAAY,EAAE,sBAACF,KAAD,EAAW;AACvBV,YAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AALH,UATF,EAgBE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,aAAd;AAA4B,UAAA,OAAO,EAAEL,QAArC;AAA+C,UAAA,KAAK,EAAC;AAArD,UAhBF;AAAA,QADU,GAmBT,IA7BL,EA8BGN,QAAQ,GACP,KAAC,IAAD;AAAM,QAAA,MAAM,EAAEP,MAAd;AAAsB,QAAA,QAAQ,EAAEG,QAAhC;AAA0C,QAAA,IAAI,EAAEE;AAAhD,QADO,GAEL,IAhCN;AAAA;AADA,IADF;AAsCD;;AAED,eAAeH,GAAf","sourcesContent":["\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./chat\";\nimport { Text, View, Button, TextInput } from 'react-native';\n\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [showEmergency, setShowEmergency] = useState(true);\n  const [showForm, setShowForm] = useState(true);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n      setShowForm(false)\n    }\n  };\n\n  return (\n    <>\n    <View>\n      {showEmergency ? (\n        <Button\n        class='emergencybtn'\n        onPress={() => {\n            setShowEmergency(false);\n            title=\"Emergancy\"\n          }}\n        />\n        \n      ) : showForm? (\n        <View>\n          <Text>Join A Chat</Text>\n          <TextInput\n            type=\"text\"\n            placeholder=\"John...\"\n            onChangeText={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <TextInput\n            type=\"text\"\n            placeholder=\"Room ID...\"\n            onChangeText={(event) => {\n              setRoom(event.target.value);\n            }}\n          />\n          <Button class='joinroombtn' onPress={joinRoom} title=\"Join A Room\"/>\n        </View>\n      ): null}\n      {showChat ? (\n        <Chat socket={socket} username={username} room={room} />\n      ) : null}\n      </View>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}